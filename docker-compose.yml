version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: candhis_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - candhis_network

  migrate:
    image: migrate/migrate
    container_name: migrate
    depends_on:
      - postgres
    volumes:
      - ./infra/db/migrations:/migrations
    entrypoint: [
      "migrate", 
      "-path", "/migrations", 
      "-database", "postgres://user:password@postgres:5432/candhis_db?sslmode=disable",
      "up"
    ]
    networks:
      - candhis_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - candhis_network

  sessionid_scrapper:
    build:
      context: .
      dockerfile: Dockerfile.sessionid
    container_name: sessionid_scrapper
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=candhis_db
    networks:
      - candhis_network

  campaigns_scrapper:
    build:
      context: .
      dockerfile: Dockerfile.campaigns
    container_name: campaigns_scrapper
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=candhis_db
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - candhis_network

volumes:
  postgres_data:
  es_data:

networks:
  candhis_network: