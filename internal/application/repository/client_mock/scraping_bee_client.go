// Code generated by MockGen. DO NOT EDIT.
// Source: client.go
//
// Generated by this command:
//
//	mockgen -package clientmock -destination=./client_mock/scraping_bee_client.go -source=client.go ScrapingBeeClient
//

// Package clientmock is a generated GoMock package.
package clientmock

import (
	reflect "reflect"

	model "github.com/tul1/candhis_api/internal/application/model"
	gomock "go.uber.org/mock/gomock"
)

// MockScrapingBeeClient is a mock of ScrapingBeeClient interface.
type MockScrapingBeeClient struct {
	ctrl     *gomock.Controller
	recorder *MockScrapingBeeClientMockRecorder
}

// MockScrapingBeeClientMockRecorder is the mock recorder for MockScrapingBeeClient.
type MockScrapingBeeClientMockRecorder struct {
	mock *MockScrapingBeeClient
}

// NewMockScrapingBeeClient creates a new mock instance.
func NewMockScrapingBeeClient(ctrl *gomock.Controller) *MockScrapingBeeClient {
	mock := &MockScrapingBeeClient{ctrl: ctrl}
	mock.recorder = &MockScrapingBeeClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScrapingBeeClient) EXPECT() *MockScrapingBeeClientMockRecorder {
	return m.recorder
}

// GetCandhisSessionID mocks base method.
func (m *MockScrapingBeeClient) GetCandhisSessionID() (model.CandhisSessionID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCandhisSessionID")
	ret0, _ := ret[0].(model.CandhisSessionID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCandhisSessionID indicates an expected call of GetCandhisSessionID.
func (mr *MockScrapingBeeClientMockRecorder) GetCandhisSessionID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCandhisSessionID", reflect.TypeOf((*MockScrapingBeeClient)(nil).GetCandhisSessionID))
}
